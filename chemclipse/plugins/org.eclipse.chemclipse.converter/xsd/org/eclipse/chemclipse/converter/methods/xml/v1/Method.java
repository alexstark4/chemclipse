/*******************************************************************************
 * Copyright (c) 2020 Lablicate GmbH.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * SPDX-License-Identifier: EPL-1.0
 * 
 * Contributors:
 * generated by xjc compiler
 *******************************************************************************/
package org.eclipse.chemclipse.converter.methods.xml.v1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;

/**
 * <p>
 * Java class for Method complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Method">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="metadata" type="{https://github.com/eclipse/chemclipse/processmethods/v1}MetaData" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="entry" type="{https://github.com/eclipse/chemclipse/processmethods/v1}Entry" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="UUID" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="datacategories" use="required" type="{https://github.com/eclipse/chemclipse/processmethods/v1}DataCategoryList" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="category" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="operator" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="description" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="finalized" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;anyAttribute/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Method", namespace = "https://github.com/eclipse/chemclipse/processmethods/v1", propOrder = {"metadata", "entry"})
public class Method {

	@XmlElement(namespace = "https://github.com/eclipse/chemclipse/processmethods/v1")
	protected List<MetaData> metadata;
	@XmlElement(namespace = "https://github.com/eclipse/chemclipse/processmethods/v1")
	protected List<Entry> entry;
	@XmlAttribute(name = "UUID", required = true)
	protected String uuid;
	@XmlAttribute(name = "datacategories", required = true)
	protected List<String> datacategories;
	@XmlAttribute(name = "name")
	protected String name;
	@XmlAttribute(name = "category")
	protected String category;
	@XmlAttribute(name = "operator")
	protected String operator;
	@XmlAttribute(name = "description")
	protected String description;
	@XmlAttribute(name = "finalized")
	protected Boolean finalized;
	@XmlAnyAttribute
	private final Map<QName, String> otherAttributes = new HashMap<QName, String>();

	/**
	 * Gets the value of the metadata property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list,
	 * not a snapshot. Therefore any modification you make to the
	 * returned list will be present inside the JAXB object.
	 * This is why there is not a <CODE>set</CODE> method for the metadata property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * <pre>
	 *    getMetadata().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link MetaData }
	 * 
	 * 
	 */
	public List<MetaData> getMetadata() {

		if(metadata == null) {
			metadata = new ArrayList<MetaData>();
		}
		return this.metadata;
	}

	/**
	 * Gets the value of the entry property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list,
	 * not a snapshot. Therefore any modification you make to the
	 * returned list will be present inside the JAXB object.
	 * This is why there is not a <CODE>set</CODE> method for the entry property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * <pre>
	 *    getEntry().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link Entry }
	 * 
	 * 
	 */
	public List<Entry> getEntry() {

		if(entry == null) {
			entry = new ArrayList<Entry>();
		}
		return this.entry;
	}

	/**
	 * Gets the value of the uuid property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link String }
	 * 
	 */
	public String getUUID() {

		return uuid;
	}

	/**
	 * Sets the value of the uuid property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link String }
	 * 
	 */
	public void setUUID(String value) {

		this.uuid = value;
	}

	/**
	 * Gets the value of the datacategories property.
	 * 
	 * <p>
	 * This accessor method returns a reference to the live list,
	 * not a snapshot. Therefore any modification you make to the
	 * returned list will be present inside the JAXB object.
	 * This is why there is not a <CODE>set</CODE> method for the datacategories property.
	 * 
	 * <p>
	 * For example, to add a new item, do as follows:
	 * <pre>
	 *    getDatacategories().add(newItem);
	 * </pre>
	 * 
	 * 
	 * <p>
	 * Objects of the following type(s) are allowed in the list
	 * {@link String }
	 * 
	 * 
	 */
	public List<String> getDatacategories() {

		if(datacategories == null) {
			datacategories = new ArrayList<String>();
		}
		return this.datacategories;
	}

	/**
	 * Gets the value of the name property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link String }
	 * 
	 */
	public String getName() {

		return name;
	}

	/**
	 * Sets the value of the name property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link String }
	 * 
	 */
	public void setName(String value) {

		this.name = value;
	}

	/**
	 * Gets the value of the category property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link String }
	 * 
	 */
	public String getCategory() {

		return category;
	}

	/**
	 * Sets the value of the category property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link String }
	 * 
	 */
	public void setCategory(String value) {

		this.category = value;
	}

	/**
	 * Gets the value of the operator property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link String }
	 * 
	 */
	public String getOperator() {

		return operator;
	}

	/**
	 * Sets the value of the operator property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link String }
	 * 
	 */
	public void setOperator(String value) {

		this.operator = value;
	}

	/**
	 * Gets the value of the description property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link String }
	 * 
	 */
	public String getDescription() {

		return description;
	}

	/**
	 * Sets the value of the description property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link String }
	 * 
	 */
	public void setDescription(String value) {

		this.description = value;
	}

	/**
	 * Gets the value of the finalized property.
	 * 
	 * @return
	 * 		possible object is
	 *         {@link Boolean }
	 * 
	 */
	public boolean isFinalized() {

		if(finalized == null) {
			return false;
		} else {
			return finalized;
		}
	}

	/**
	 * Sets the value of the finalized property.
	 * 
	 * @param value
	 *            allowed object is
	 *            {@link Boolean }
	 * 
	 */
	public void setFinalized(Boolean value) {

		this.finalized = value;
	}

	/**
	 * Gets a map that contains attributes that aren't bound to any typed property on this class.
	 * 
	 * <p>
	 * the map is keyed by the name of the attribute and
	 * the value is the string value of the attribute.
	 * 
	 * the map returned by this method is live, and you can add new attribute
	 * by updating the map directly. Because of this design, there's no setter.
	 * 
	 * 
	 * @return
	 * 		always non-null
	 */
	public Map<QName, String> getOtherAttributes() {

		return otherAttributes;
	}
}
